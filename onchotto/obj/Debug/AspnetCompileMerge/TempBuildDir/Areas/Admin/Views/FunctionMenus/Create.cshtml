@model OnChotto.Models.Entities.FunctionMenu


@{
    ViewBag.Title = "Create";
    Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";
}


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.UserId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.UserId,
              new SelectList(ViewBag.UserId, "Id", "FullName"),
              "Please select a User",
              new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.UserId, "", new { @class = "text-danger" })
                @*@Html.DropDownList("UserId", null, "Please select a User", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.UserId, "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuParentId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MenuParentId,
              new SelectList(ViewBag.MenuParentId, "MenuParentId", "Name"),
              "Chọn danh mục",
              new { @class = "form-control", @onchange = "FillMenuChild()" })
                @Html.ValidationMessageFor(m => m.MenuParentId, "", new { @class = "text-danger" })
                @*@Html.DropDownList("MenuParentId", null, "Please select a value", htmlAttributes: new { @class = "form-control unicase-form-control select2" })
                    @Html.ValidationMessage("MenuParentId", "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MenuChildId, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">

                @Html.DropDownListFor(model => model.MenuChildId,
       new SelectList(Enumerable.Empty<SelectListItem>(), "MenuChildId", "Text"),
              "Select danh mục",
              new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.MenuChildId, "", new { @class = "text-danger" })

                @*@Html.DropDownList("MenuChildId", null, "Please select a value", htmlAttributes: new { @class = "form-control unicase-form-control" })
                    @Html.ValidationMessage("MenuChildId", "", new { @class = "text-danger" })*@
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TypeMenu, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox-inline">
                    @Html.EditorFor(model => model.TypeMenu)
                    @Html.ValidationMessageFor(model => model.TypeMenu, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.STT, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.STT, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.STT, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Status, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div class="checkbox-inline">
                    @Html.EditorFor(model => model.Status)
                    @Html.ValidationMessageFor(model => model.Status, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
@section Scripts {
    <script>
        function FillMenuChild() {
            var locationId = $('#MenuParentId').val();

            $.ajax({
               
                url: '/FunctionMenus/FillMenuChild',
                type: "GET",
                dataType: "JSON",
                data: { LocationId: locationId },
                success:
                    function (MenuChild) {                        
                        $("#MenuChildId").html(""); // clear before appending new list
                       
                        $.each(MenuChild, function (i, city) {
                            $("#MenuChildId").append(
                                $('<option></option>').val(city.MenuChildId).html(city.Text));
                        });
                    }
            });
        }
    </script>
}




