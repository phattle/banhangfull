@model OnChotto.Models.Entities.SysCompany
@using OnChotto.Models
@using OnChotto.Models.Dao

@using OnChotto.Models
@using (Html.BeginForm("Confirm", "Seller", FormMethod.Post, new { id = "Confirm" }))
{

    @Html.AntiForgeryToken()
    <style>
        body {
            margin-top: 40px;
        }

        .stepwizard-step p {
            margin-top: 10px;
        }

        .stepwizard-row {
            display: table-row;
        }

        .stepwizard {
            display: table;
            width: 50%;
            position: relative;
        }

        .stepwizard-step button[disabled] {
            opacity: 1 !important;
            filter: alpha(opacity=100) !important;
        }

        .stepwizard-row:before {
            top: 14px;
            bottom: 0;
            position: absolute;
            content: " ";
            width: 100%;
            height: 1px;
            background-color: #ccc;
            z-order: 0;
        }

        .stepwizard-step {
            display: table-cell;
            text-align: center;
            position: relative;
        }

        .btn-circle {
            width: 30px;
            height: 30px;
            text-align: center;
            padding: 6px 0;
            font-size: 12px;
            line-height: 1.428571429;
            border-radius: 15px;
        }

        .select2-container--default .select2-selection--single {
            border: 1px solid #eee;
        }

        .select2-container .select2-selection--single {
            height: 34px;
            line-height: 34px;
        }

        .select2-container--default .select2-selection--single .select2-selection__arrow {
            height: 31px;
            position: absolute;
            top: 1px;
            right: 1px;
            width: 20px;
        }
    </style>
    <link href="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/css/bootstrap.min.css" rel="stylesheet" id="bootstrap-css">
    <script src="//maxcdn.bootstrapcdn.com/bootstrap/3.3.0/js/bootstrap.min.js"></script>
    <script src="//code.jquery.com/jquery-1.11.1.min.js"></script>
    <!------ Include the above in your HEAD tag ---------->

    <div class="container">

        <div class="stepwizard col-md-offset-3">
            <div class="stepwizard-row setup-panel">
                <div class="stepwizard-step">
                    <a href="#step-1" type="button" class="btn btn-primary btn-circle">1</a>
                    <p>Thông tin địa chỉ</p>
                </div>
                <div class="stepwizard-step">
                    <a href="#step-2" type="button" class="btn btn-default btn-circle" disabled="disabled">2</a>
                    <p>Bảo vệ tài khoản của bạn</p>
                </div>
                <div class="stepwizard-step">
                    <a href="#step-3" type="button" class="btn btn-default btn-circle" disabled="disabled">3</a>
                    <p>Để nhận thanh toán</p>
                </div>
                <div class="stepwizard-step">
                    <a href="#step-4" type="button" class="btn btn-default btn-circle" disabled="disabled">4</a>
                    <p>Chuẩn bị sản phẩm</p>
                </div>
            </div>
        </div>

        <form role="form" action="" method="post">
            <div class="row setup-content" id="step-1">
                <div class="col-xs-6 col-md-offset-3">
                    <div class="col-md-12">
                        <h3> Thông tin địa chỉ</h3>
                        <div class="form-group">
                            <label class="control-label">Address 1</label>
                            @*<textarea required="required" class="form-control" placeholder="Enter your address"></textarea>*@
                            @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group">
                                <label class="control-label">Country 1</label>
                                <input maxlength="100" required="required" type="text" class="form-control" placeholder="Enter Country" />
                            </div>*@
                        <div class="form-group">
                            <label class="control-label">Tỉnh/Thành phố</label>
                            @*<input maxlength="100" required="required" type="text" class="form-control" placeholder="Enter City" />*@
                            @Html.DropDownList("ProvinceId", null, "Chọn Tỉnh thành", htmlAttributes: new { @class = "form-control unicase-form-control select2" })
                            @Html.ValidationMessage("ProvinceId", "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Quận/Huyện</label>
                            @*<input maxlength="100" required="required" type="text" class="form-control" placeholder="Enter District" />*@
                            @Html.DropDownList("DistrictId", null, "Chọn Quận huyện", htmlAttributes: new { @class = "form-control unicase-form-control" })
                            @Html.ValidationMessage("DistrictId", "", new { @class = "text-danger" })
                        </div>
                        @*<div class="form-group">
                                <label class="control-label">Ward 1</label>
                                <input maxlength="100" required="required" type="text" class="form-control" placeholder="Enter Ward" />
                            </div>*@
                        @*<div class="form-group">
                                <label class="control-label">Email</label>
                                <input maxlength="100" type="text" required="required" class="form-control" placeholder="Enter Email" />
                            </div>*@

                    </div>
                    <div class="form-group">
                        <div class="col-md-12">
                            <div class="checkbox">
                                <label>@Html.CheckBoxFor(model => model.otherAddress, false) Địa chỉ kinh doanh khác</label>
                            </div>
                        </div>
                    </div>

                    <div id="otherAddressBox" style="display: none">
                        <div class="form-group">
                            <div class="col-md-12">
                                <label class="control-label">Địa chỉ</label>
                                @Html.EditorFor(model => model.BusinessAddress, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BusinessAddress, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        @*<div class="form-group">
                                <div class="col-md-12">
                                    <label class="control-label" for="OtherEmail">Địa chỉ Email</label>
                                    @Html.TextBoxFor(model => model.Email, new { @class = "form-control unicase-form-control", Type = "email", placeholder = "Địa chỉ email ..." })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                            </div>*@

                    </div>
                    <button class="btn btn-primary nextBtn btn-lg pull-right" type="button">Next</button>
                </div>
            </div>
            <div class="row setup-content" id="step-2">
                <div class="col-xs-6 col-md-offset-3">
                    <div class="col-md-12">
                        <h3> Xác nhận thông tin đăng ký kinh doanh</h3>
                        <div class="form-group">
                            <label class="control-label">Business File</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Business File" />*@
                            @Html.EditorFor(model => model.BusinessFile, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.BusinessFile, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Legal Name / Company Name</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Company Name" />*@
                            @Html.EditorFor(model => model.CompName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.CompName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Business Registration No</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Business Registration" />*@
                            @Html.EditorFor(model => model.BusinessRegistrationNo, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.BusinessRegistrationNo, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Business Owner Name</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Business Owner Name" />*@
                            @Html.EditorFor(model => model.BusinessOwnerName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.BusinessOwnerName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Business Infomation Document</label>
                            <input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Business Infomation Document" />
                        </div>
                        <button class="btn btn-primary nextBtn btn-lg pull-right" type="button">Next</button>
                    </div>
                </div>
            </div>
            <div class="row setup-content" id="step-3">
                <div class="col-xs-6 col-md-offset-3">
                    <div class="col-md-12">
                        <h3> Verify Bank Account</h3>
                        <div class="form-group">
                            <label class="control-label">Account Name</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Account Name" />*@
                            @Html.EditorFor(model => model.AccountName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.AccountName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Account Number</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Account Number" />*@
                            @Html.EditorFor(model => model.AccountNumber, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.AccountNumber, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Bank</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Bank" />*@
                            @Html.EditorFor(model => model.Bank, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Bank, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Brach Name</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Brach Name" />*@
                            @Html.EditorFor(model => model.BrachName, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.BrachName, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Bank Code</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Brach Code" />*@
                            @Html.EditorFor(model => model.BankCode, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.BankCode, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">SWIFT</label>
                            @*<input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter SWIFT" />*@
                            @Html.EditorFor(model => model.Swift, new { htmlAttributes = new { @class = "form-control", @required = "required" } })
                            @Html.ValidationMessageFor(model => model.Swift, "", new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label class="control-label">Bank Infomation Document</label>
                            <input maxlength="200" type="text" required="required" class="form-control" placeholder="Enter Infomation Document" />
                        </div>
                        <button class="btn btn-primary nextBtn btn-lg pull-right" type="button">Next</button>
                    </div>
                </div>
            </div>
            <div class="row setup-content" id="step-4">
                <div class="col-xs-6 col-md-offset-3">
                    <div class="col-md-12">
                        <h3> Đăng tải sản phẩm của bạn</h3>
                        <button class="btn btn-success btn-lg pull-right" type="submit">Submit</button>
                    </div>
                </div>
            </div>
        </form>

    </div>
    <script type="text/javascript">
        $(document).ready(function () {
            var navListItems = $('div.setup-panel div a'),
                    allWells = $('.setup-content'),
                    allNextBtn = $('.nextBtn');

            allWells.hide();

            navListItems.click(function (e) {
                e.preventDefault();
                var $target = $($(this).attr('href')),
                        $item = $(this);

                if (!$item.hasClass('disabled')) {
                    navListItems.removeClass('btn-primary').addClass('btn-default');
                    $item.addClass('btn-primary');
                    allWells.hide();
                    $target.show();
                    $target.find('input:eq(0)').focus();
                }
            });

            allNextBtn.click(function () {
                var curStep = $(this).closest(".setup-content"),
                    curStepBtn = curStep.attr("id"),
                    nextStepWizard = $('div.setup-panel div a[href="#' + curStepBtn + '"]').parent().next().children("a"),
                    curInputs = curStep.find("input[type='text'],input[type='url']"),
                    isValid = true;

                $(".form-group").removeClass("has-error");
                for (var i = 0; i < curInputs.length; i++) {
                    if (!curInputs[i].validity.valid) {
                        isValid = false;
                        $(curInputs[i]).closest(".form-group").addClass("has-error");
                    }
                }

                if (isValid)
                    nextStepWizard.removeAttr('disabled').trigger('click');
            });

            $('div.setup-panel div a.btn-primary').trigger('click');
        });
        checkOtherAddressBox();
        $('#otherAddress').change(function () {
            checkOtherAddressBox();
        });

        function checkOtherAddressBox() {
            if ($('#otherAddress')[0].checked === true) {
                $("#otherAddressBox").slideDown();
                //getTransport('OtherDistrictId');
            } else {
                $("#otherAddressBox").slideUp();
                //getTransport('DistrictId');
            }
        }
        // Hàm Ajax Lấy District
        $("#ProvinceId, #OtherProvinceId").change(function (e) {
            e.preventDefault();
            var data = {
                provinceId: $(this).val()
            };

            var thisctrl = $(this);

            $.ajax({
                url: '/Home/AjaxGetDistrictByProvice',
                type: 'POST',
                dataType: 'html',
                data: data,
                success: function (html) {

                    if (thisctrl.attr('id') === "ProvinceId") {
                        $('#DistrictId').html(html);

                    }
                    else {
                        $('#OtherDistrictId').html(html);
                    }
                },
                complete: function () {
                    //Lay danh sach nha van chuyen
                    if (thisctrl.attr('id') === "OtherProvinceId") {
                        getTransport("OtherProvinceId");
                    }
                    else if ($('#OtherAddress')[0].checked !== true) {
                        getTransport('DistrictId');
                    }
                },
                error: function (err) {
                    alert("Lỗi hệ thống, ấn F5 để refresh lại trình duyệt để tiếp tục.");
                }
            });
        });
    </script>
}
