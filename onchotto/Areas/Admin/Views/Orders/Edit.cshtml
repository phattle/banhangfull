@model OnChotto.Models.ViewModel.OrderEditViewModel
@{
    ViewBag.Title = "Cập nhật đơn hàng";
    Layout = "~/Areas/Admin/Views/Shared/_layout.cshtml";
}

<div class="box">
    <div class="box-body">
        @using (Html.BeginForm())
        {
            <div class="box">
                <h3 class="block-title">
                    <i class="fa fa-user" aria-hidden="true"></i> THÔNG TIN KHÁCH HÀNG
                </h3>
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th class="hidden-print">
                                @Html.DisplayNameFor(model => model.OrderStatus.Name)
                            </th>
                            <th>
                                Họ và tên
                            </th>
                            <th>
                                Số điện thoại
                            </th>
                            <th>
                                Địa Email
                            </th>
                            <th>Ngày đặt</th>
                            <th>
                                Địa chỉ nhận hàng
                            </th>
                            <th>
                                Ghi chú đơn hàng
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td class="hidden-print">
                                <p class="label label-success">@Model.OrderStatus.Name</p>
                            </td>
                            <td>@Model.ReceiveName</td>
                            <td>@Model.ReceivePhone</td>
                            <td>@Model.User.Email</td>
                            <td>
                                @if (Model.OrderDate.HasValue)
                                {
                                    @Model.OrderDate.Value.ToString("d");
                                }
                            </td>
                            <td>@Model.ReceiveAddress, @Model.Transport.District.Type @Model.Transport.District.Name, @Model.Transport.District.Province.Type @Model.Transport.District.Province.Name</td>
                            <td>
                                @if (Model.PaymentMethod != null)
                                {
                                    @Model.PaymentMethod.Name
                                    <br />
                                }
                                @Model.Note
                            </td>
                        </tr>
                    </tbody>

                </table>
            </div>
            <h3 class="block-title">
                <i class="fa fa-info" aria-hidden="true"></i> THÔNG TIN ĐƠN HÀNG: #@Model.ItemCode
            </h3>
            <div class="box">
                <table class="table table-bordered">
                    <tr>
                        <th>#</th>
                        <th>HScode</th>
                        <th>Tên sản phẩm</th>
                        <th>Đơn giá</th>
                        <th>Số lượng</th>
                        <th>Trọng lượng</th>
                        <th>Tổng lượng</th>
                        <th>Thuế bang</th>
                        @*<th>Vận chuyển bang</th>*@
                        <th>Nhập khẩu</th>
                        <th>Thành tiền</th>
                    </tr>
                    @foreach (var d in Model.OrderDetails)
                    {
                        var p = d.Product; // Quan hệ một nhiều với bảng porducts
                        var item = d.ProductId;
                        <tr>
                            <td width="90" class="text-center"><img src="@p.FeaturedImage" width="48" /> <br /> @p.Id <br /> @p.ProductZone</td>
                            @if (@p.HsCodeId == null)
                    {
                                <td style="text-align:right"> - </td>
                            }
                            else
                            {
                                <td>@p.ProductTaxHscodes.HsCode</td>
                            }

                            <td><a class="hidden-print" href="@p.DetailPageURL" target="_blank"> @p.Name</a> <a class="visible-print-inline-block">@p.Name</a></td>
                            <td>@Html.FormatValue(p.PriceAfter, "{0:0,0}")<sup>đ</sup></td>
                            <td>@d.Amount</td>
                            <td>@p.WeightKG <sup>Kg</sup></td>
                            <td>@Html.FormatValue(d.Amount * p.WeightKG, "{0:0,0.00}")<sup>Kg</sup></td>
                            @*Start Các loại phí dịch vụ theo order Details*@
                            <td>@Html.FormatValue(d.FederalTax, "{0:0,0}")<sup>đ</sup></td>
                            @*<td>@d.ShippingInLand </td>*@
                            <td>@Html.FormatValue(d.TaxExport, "{0:0,0}")<sup>đ</sup></td>
                            @*Start Các loại phí dịch vụ theo order Details Thành tiền*@
                            <td style="text-align:right" id="@p.Id">@Html.FormatValue((p.PriceAfter * d.Amount), "{0:0,0}")<sup>đ</sup></td>

                        </tr>
                    }
           
                </table>
            </div>

            @Html.AntiForgeryToken()

     <div class="col-md-12">
     <div class="col-md-6">
              <div class="form-horizontal">
                        <h3 class="block-title"><i class="fa fa-sliders" aria-hidden="true"></i> Thông tin người nhận hàng</h3>
                        <hr />
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.Id)

                        <div class="form-group">
                            <div class="col-md-7">
                                @Html.LabelFor(model => model.ReceiveName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ReceiveName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ReceiveName, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-3">
                                @Html.LabelFor(model => model.ReceivePhone, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.ReceivePhone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.ReceivePhone, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-10">
                                @Html.LabelFor(model => model.ReceiveAddress, htmlAttributes: new { @class = "control-label" })
                                @Html.TextAreaFor(model => model.ReceiveAddress, new { @class = "form-control", @rows = 2 })
                                @Html.ValidationMessageFor(model => model.ReceiveAddress, "", new { @class = "text-danger" })

                            </div>
                            <div class="col-md-5">
                                @Html.LabelFor(model => model.ProvinceId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("ProvinceId", null, "Chọn Tỉnh thành", htmlAttributes: new { @class = "form-control unicase-form-control select2" })
                                @Html.ValidationMessage("ProvinceId", "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5">
                                @Html.LabelFor(model => model.DistrictId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("DistrictId", null, "Chọn Quận huyện", htmlAttributes: new { @class = "form-control unicase-form-control" })
                                @Html.ValidationMessage("DistrictId", "", new { @class = "text-danger" })
                            </div>
                            <div class="col-md-5">
                                @Html.LabelFor(model => model.TransportId, htmlAttributes: new { @class = "control-label" })
                                @Html.DropDownList("TransportId", null, "Chọn nha van chuyen", htmlAttributes: new { @class = "form-control unicase-form-control" })
                                @Html.ValidationMessage("TransportId", "", new { @class = "text-danger" })
                            </div>
                        </div>

                  <div class="form-horizontal">
                      <h3 class="block-title"><i class="fa fa-bullhorn" aria-hidden="true"></i> Trạng thái đơn hàng</h3>
                      <hr />
                      <div class="form-group">
                          <div class="col-md-5">
                              @Html.LabelFor(model => model.StatusId, "Trạng thái đơn", htmlAttributes: new { @class = "control-label" })
                              @Html.DropDownList("StatusId", null, htmlAttributes: new { @class = "form-control" })
                              @Html.ValidationMessageFor(model => model.StatusId, "", new { @class = "text-danger" })
                          </div>
                          <div class="col-md-5">
                              @Html.LabelFor(model => model.PaymentMethodId, "PT thanh toán", htmlAttributes: new { @class = "control-label" })
                              @Html.DropDownList("PaymentMethodId", null, htmlAttributes: new { @class = "form-control" })
                              @Html.ValidationMessageFor(model => model.PaymentMethodId, "", new { @class = "text-danger" })
                          </div>
                          <div class="col-md-5">
                              @Html.LabelFor(model => model.Deposit, htmlAttributes: new { @class = "control-label" })
                              @Html.EditorFor(model => model.Deposit, new { htmlAttributes = new { @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.Deposit, "", new { @class = "text-danger" })
                          </div>
                          <div class="col-md-5">
                              @Html.LabelFor(model => model.RequireDate, htmlAttributes: new { @class = "control-label" })
                              @Html.EditorFor(model => model.RequireDate, new { htmlAttributes = new { @class = "form-control" } })
                              @Html.ValidationMessageFor(model => model.RequireDate, "", new { @class = "text-danger" })
                          </div>@*datepicker*@
                      </div>
                  </div>
                    </div>
              </div>
     <div class="col-md-6">
             <div class="form-horizontal">
                 <h3 class="block-title"><i class="fa fa-money" aria-hidden="true"></i> Điều chỉnh phí dịch vụ (US)</h3>
                 <hr />
                 @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                 @Html.HiddenFor(model => model.Id)

                 <div class="form-group">
                     <div class="col-md-5">
                         @Html.LabelFor(model => model.ShippingInLand, htmlAttributes: new { @class = "control-label" })
                         @Html.EditorFor(model => model.ShippingInLand, new { htmlAttributes = new {@class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.ShippingInLand, "", new { @class = "text-danger" })
                     </div>
                     <div class="col-md-5">
                         @Html.LabelFor(model => model.HandlingFee, htmlAttributes: new { @class = "control-label" })
                         @Html.EditorFor(model => model.HandlingFee, new { htmlAttributes = new { @class = "form-control" } })
                         @Html.ValidationMessageFor(model => model.HandlingFee, "", new { @class = "text-danger" })
                     </div>
                 </div>

                 <div class="form-horizontal">
                     <h3 class="block-title"><i class="fa fa-gears" aria-hidden="true"></i> Điều chỉnh phí dịch vụ (VN)</h3>
                     <hr />
                     <div class="form-group">
                         <div class="col-md-5">
                             @Html.LabelFor(model => model.AFFee, htmlAttributes: new { @class = "control-label" })
                             @Html.EditorFor(model => model.AFFee, new { htmlAttributes = new { @class = "form-control" } })
                             @Html.ValidationMessageFor(model => model.AFFee, "", new { @class = "text-danger" })
                         </div>
                         <div class="col-md-5">
                             @Html.LabelFor(model => model.ClearanceFee, htmlAttributes: new { @class = "control-label" })
                             @Html.EditorFor(model => model.ClearanceFee, new { htmlAttributes = new { @class = "form-control" } })
                             @Html.ValidationMessageFor(model => model.ClearanceFee, "", new { @class = "text-danger" })
                         </div>
                     </div>

                     <div class="form-group">
                         <div class="col-md-5">
                             @Html.LabelFor(model => model.TECSServicesFee, htmlAttributes: new { @class = "control-label" })
                             @Html.EditorFor(model => model.TECSServicesFee, new { htmlAttributes = new { @class = "form-control" } })
                             @Html.ValidationMessageFor(model => model.TECSServicesFee, "", new { @class = "text-danger" })
                         </div>
                         <div class="col-md-5">
                             @Html.LabelFor(model => model.TransactionFee, htmlAttributes: new { @class = "control-label" })
                             @Html.EditorFor(model => model.TransactionFee, new { htmlAttributes = new { @class = "form-control" } })
                             @Html.ValidationMessageFor(model => model.TransactionFee, "", new { @class = "text-danger" })
                         </div>

                     </div>

                     <div class="form-group">
                         <div class="col-md-5">
                             @Html.LabelFor(model => model.CustomFee, htmlAttributes: new { @class = "control-label" })
                             @Html.EditorFor(model => model.CustomFee, new { htmlAttributes = new { @class = "form-control" } })
                             @Html.ValidationMessageFor(model => model.CustomFee, "", new { @class = "text-danger" })
                         </div>
                     </div>
                 </div>

                 <div class="form-group">
                     <div class="col-md-offset-10 col-md-8">
                         <input type="submit" value="Save" class="btn btn-primary" />
                     </div>
                 </div>
             </div>
         </div>   
     </div>
        <div class="col-md-12">
            <h3 class="block-title"><i class="fa fa-comment-o" aria-hidden="true"></i> Ghi chú đơn hàng</h3>
            <hr />
            <div class="col-md-3">
                <div class="form-group">
                    <div>
                        @Html.LabelFor(model => model.Noteshopper, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Noteshopper, new { @class = "form-control", @rows = 3 })
                        @Html.ValidationMessageFor(model => model.Noteshopper, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div>
                        @Html.LabelFor(model => model.NoteCustomerService, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.NoteCustomerService, new { @class = "form-control", @rows = 3 })
                        @Html.ValidationMessageFor(model => model.NoteCustomerService, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div>
                        @Html.LabelFor(model => model.NoteWarehouseStaff, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.NoteWarehouseStaff, new { @class = "form-control", @rows = 3 })
                        @Html.ValidationMessageFor(model => model.NoteWarehouseStaff, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    <div>
                        @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label" })
                        @Html.TextAreaFor(model => model.Note, new { @class = "form-control", @rows = 3 })
                        @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
        </div>
        }

  <div>
            @Html.ActionLink("Back to List", "Index")
        </div>
    </div>
</div>

@section Scripts{

    <script>
        // Hàm Ajax Lấy District
        $("#ProvinceId").change(function (e) {
            e.preventDefault();
            var data = {
                provinceId: $(this).val()
            };

            var thisctrl = $(this);

            $.ajax({
                url: '/Home/AjaxGetDistrictByProvice',
                type: 'POST',
                dataType: 'html',
                data: data,
                success: function (html) {
                    $('#DistrictId').html(html);
                },
                complete: function () {
                    getTransport('DistrictId');
                },
                error: function (err) {
                    alert("Lỗi hệ thống, ấn F5 để refresh lại trình duyệt để tiếp tục.");
                }
            });
        });

        //Lấy và cập nhật nhà vận chuyển
        $('#DistrictId').change(function (e) {
            e.preventDefault();
            getTransport('DistrictId');
        });

        //Lấy bảng nhà vận chuyển
        function getTransport(id) {
            var districtId = $('#' + id).val();
            //alert(districtId);
            if (districtId == undefined || districtId === "") return false;
            //lấy bảng vận chuyển
            var data = {
                districtId: districtId
            };

            $.ajax({
                url: '/Admin/Orders/AjaxGetTransportToSelect',
                type: 'GET',
                dataType: 'html',
                data: data,
                success: function (html) {
                    $("#TransportId").html(html);
                },
                error: function (err) {
                    alert("Lỗi hệ thống, ấn F5 để refresh lại trình duyệt để tiếp tục.");
                }
            });
        }
    </script>

}